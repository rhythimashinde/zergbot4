use "../Generic/Generic" as knowledge.
use Manager as knowledge.
order=linearall.

module ManagerEvent {
			
	%%%%%%%%%%%%%%% --------------------------------------- Units --------------------------------------- %%%%%%%%%%%%%%%
	
	% If drone info received, insert it in knowledge base
	forall (Name).sent(drone(Id)) 
		do insert(drone(Name, Id)).
	
	% When hatcheryPosition received, insert it to knowledge base
	if (_).sent:(hatcheryPosition(X, Y)) 
		then insert(hatcheryPosition(X, Y)).
	
	% If a drone has died, delete him from knowledge base
	forall (_).sent:(death(Id)), bel(drone(Name, Id)) 
		do delete(drone(Name, Id)).
	
	%%%%%%%%%%%%%%% --------------------------------------- Building --------------------------------------- %%%%%%%%%%%%%%%
	
	% If believe done, but the corresponding drone does not exist anymore, delete done from knowledge base
	if bel(isBuilder(Name, Id), not(drone(Name, Id)))
		then delete(isBuilder(Name, Id)).
	
	% If not believing done yet and have info about drone, insert in knowledge base and tell the drone he is the builder 
	if bel(not(isBuilder(Name, Id)), drone(Name, Id))
		then insert(isBuilder(Name, Id)) + (Name).send(builder).
	
	% If believe done, but the corresponding drone does not exist anymore, delete done from knowledge base
	if bel(isGasCollector(Name, Id), not(drone(Name, Id)))
		then delete(isGasCollector(Name, Id)).
	
	% If not believing done yet and have info about drone, insert in knowledge base and tell the drone he is the builder 
	if bel(not(isGasCollector(Name, Id)), drone(Name, Id))
		then insert(isGasCollector(Name, Id)) + (Name).send(gasCollector).
	
	%%%%%%%%%%%%%%% --------------------------------------- Messaging --------------------------------------- %%%%%%%%%%%%%%%
	
	% If hatchery position is requested, send the nexus location
	forall (Name).sent?(hatcheryPosition), bel(hatcheryPosition(X, Y))
		do (Name).send:(hatcheryPosition(X, Y)).
	
	%%%%%%%%%%%%%%% --------------------------------------- Attacking --------------------------------------- %%%%%%%%%%%%%%%
		
	% If zergling is ready, insert it in knowledge base
	forall (_).sent:(ready(Id)) 
		do insert(ready(Id)).
		
	% If enough zerglings gathered, tell zerglings to attack
	forall bel(allReady) do allother.send(attack).
}